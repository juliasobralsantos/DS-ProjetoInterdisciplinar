// <auto-generated />
using System;
using EsteticaEProcedimentos.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EsteticaEProcedimentos.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EsteticaEProcedimentos.Models.Clientes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<string>("Endereço")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<long>("Telefone")
                        .HasColumnType("bigint");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("TB_CLIENTES", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CPF = "243.567.431-10",
                            Email = "amandasilva123@gmail.com",
                            Endereço = "Rua das Orquídeas, 295 - Morumbi",
                            Nome = "Amanda da Silva",
                            Telefone = 11965843278L,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 2,
                            CPF = "189.298.674-23",
                            Email = "MaduOliveira@hotmail.com",
                            Endereço = "Rua Maria Cândida, 728 - Casa 2 - Vila Guilherme",
                            Nome = "Maria Eduarda Oliveira",
                            Telefone = 11948291640L,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 3,
                            CPF = "368.583.783-79",
                            Email = "silvaelisa2297@gmail.com",
                            Endereço = "Rua Olavo Egídio, 469 - Santana",
                            Nome = "Elisa de Souza Santos",
                            Telefone = 11987953869L,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 4,
                            CPF = "474.973.864-84",
                            Email = "lucianaalmeida9@hotmail.com",
                            Endereço = "Av. General Ataliba Leonel, 2034 - Parada Inglesa",
                            Nome = "Luciana Almeida",
                            Telefone = 11938596036L,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 5,
                            CPF = "282.684.290-19",
                            Email = "fernanda23antunes@gmail.com",
                            Endereço = "Rua da Gávea, 55 - Vila Maria",
                            Nome = "Fernanda Antunes",
                            Telefone = 11910384874L,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 6,
                            CPF = "173.183.286-57",
                            Email = "andressaferreira79@hotmail.com",
                            Endereço = "Rua Jacuna, 226 - Carandiru",
                            Nome = "Andressa Ferreira",
                            Telefone = 11928462967L,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 7,
                            CPF = "372.293.480-48",
                            Email = "analulisboa1011@outlook.com",
                            Endereço = "Av. Coronel Sezefredo Fagundes, 2847, apto. 210 - Tremembé",
                            Nome = "Ana Luiza Lisboa",
                            Telefone = 11949687931L,
                            UsuarioId = 1
                        });
                });

            modelBuilder.Entity("EsteticaEProcedimentos.Models.Procedimentos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descriçao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<string>("ProfissionalResponsavel")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<double>("ValorProcedimento")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("TB_PROCEDIMENTOS", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descriçao = "Massagem local que pode ser realizada em diversas partes do corpo.",
                            Nome = "Drenagem Linfática",
                            ProfissionalResponsavel = "Sonia",
                            ValorProcedimento = 149.99000000000001
                        },
                        new
                        {
                            Id = 2,
                            Descriçao = "Limpeza facial com utilização de produtos, retira impurezas da pele.",
                            Nome = "Limpeza de Pele",
                            ProfissionalResponsavel = "Solange",
                            ValorProcedimento = 119.98999999999999
                        },
                        new
                        {
                            Id = 3,
                            Descriçao = "Aparelho que utiliza da rádiofrequência para reduzir flacidez corporal.",
                            Nome = "Rádio Frequência",
                            ProfissionalResponsavel = "Sonia",
                            ValorProcedimento = 99.989999999999995
                        },
                        new
                        {
                            Id = 4,
                            Descriçao = "Aparelho de ultrassom utilizado para reduzir gordura localizada.",
                            Nome = "Cavitação",
                            ProfissionalResponsavel = "Solange",
                            ValorProcedimento = 89.989999999999995
                        });
                });

            modelBuilder.Entity("EsteticaEProcedimentos.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataAcesso")
                        .HasColumnType("datetime2");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("TipoUsuario")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TB_USUARIOS");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Login = "UsuarioAdmin",
                            Nome = "Usuário",
                            PasswordHash = new byte[] { 237, 103, 39, 168, 213, 221, 192, 161, 124, 116, 112, 178, 133, 198, 227, 27, 242, 100, 39, 242, 242, 8, 214, 23, 179, 254, 135, 149, 255, 219, 204, 225, 69, 159, 215, 95, 73, 91, 18, 191, 140, 130, 3, 107, 56, 155, 68, 205, 186, 122, 155, 169, 49, 250, 112, 168, 84, 197, 223, 200, 106, 216, 54, 148 },
                            PasswordSalt = new byte[] { 214, 3, 205, 206, 33, 201, 218, 115, 137, 22, 169, 97, 245, 96, 171, 245, 251, 52, 188, 200, 177, 2, 83, 46, 212, 104, 49, 7, 26, 150, 110, 254, 72, 74, 223, 193, 86, 24, 6, 207, 54, 210, 250, 227, 22, 70, 21, 122, 201, 56, 154, 148, 8, 201, 223, 206, 110, 251, 163, 241, 229, 209, 38, 12, 139, 151, 147, 249, 123, 195, 166, 191, 65, 40, 155, 62, 151, 183, 238, 138, 203, 180, 136, 74, 46, 142, 64, 223, 142, 244, 176, 244, 222, 145, 206, 146, 97, 249, 186, 79, 45, 252, 43, 101, 145, 52, 249, 161, 23, 18, 235, 198, 55, 126, 5, 57, 74, 250, 160, 71, 93, 238, 173, 55, 235, 212, 80, 49 },
                            TipoUsuario = 0
                        });
                });

            modelBuilder.Entity("EsteticaEProcedimentos.Models.Clientes", b =>
                {
                    b.HasOne("EsteticaEProcedimentos.Models.Usuario", "Usuario")
                        .WithMany("Clientes")
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("EsteticaEProcedimentos.Models.Usuario", b =>
                {
                    b.Navigation("Clientes");
                });
#pragma warning restore 612, 618
        }
    }
}
