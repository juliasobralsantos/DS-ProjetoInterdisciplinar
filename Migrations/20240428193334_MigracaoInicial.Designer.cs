// <auto-generated />
using System;
using EsteticaEProcedimentos.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EsteticaEProcedimentos.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240428193334_MigracaoInicial")]
    partial class MigracaoInicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EsteticaEProcedimentos.Models.Clientes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<string>("Endereço")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<long>("Telefone")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("TB_CLIENTES", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CPF = "243.567.431-10",
                            Email = "amandasilva123@gmail.com",
                            Endereço = "Rua das Orquídeas, 295 - Morumbi",
                            Nome = "Amanda da Silva",
                            Telefone = 11965843278L
                        },
                        new
                        {
                            Id = 2,
                            CPF = "189.298.674-23",
                            Email = "MaduOliveira@hotmail.com",
                            Endereço = "Rua Maria Cândida, 728 - Casa 2 - Vila Guilherme",
                            Nome = "Maria Eduarda Oliveira",
                            Telefone = 11948291640L
                        },
                        new
                        {
                            Id = 3,
                            CPF = "368.583.783-79",
                            Email = "silvaelisa2297@gmail.com",
                            Endereço = "Rua Olavo Egídio, 469 - Santana",
                            Nome = "Elisa de Souza Santos",
                            Telefone = 11987953869L
                        },
                        new
                        {
                            Id = 4,
                            CPF = "474.973.864-84",
                            Email = "lucianaalmeida9@hotmail.com",
                            Endereço = "Av. General Ataliba Leonel, 2034 - Parada Inglesa",
                            Nome = "Luciana Almeida",
                            Telefone = 11938596036L
                        },
                        new
                        {
                            Id = 5,
                            CPF = "282.684.290-19",
                            Email = "fernanda23antunes@gmail.com",
                            Endereço = "Rua da Gávea, 55 - Vila Maria",
                            Nome = "Fernanda Antunes",
                            Telefone = 11910384874L
                        },
                        new
                        {
                            Id = 6,
                            CPF = "173.183.286-57",
                            Email = "andressaferreira79@hotmail.com",
                            Endereço = "Rua Jacuna, 226 - Carandiru",
                            Nome = "Andressa Ferreira",
                            Telefone = 11928462967L
                        },
                        new
                        {
                            Id = 7,
                            CPF = "372.293.480-48",
                            Email = "analulisboa1011@outlook.com",
                            Endereço = "Av. Coronel Sezefredo Fagundes, 2847, apto. 210 - Tremembé",
                            Nome = "Ana Luiza Lisboa",
                            Telefone = 11949687931L
                        });
                });

            modelBuilder.Entity("EsteticaEProcedimentos.Models.Procedimentos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataInicioProcedimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descriçao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<string>("ProfissionalResponsavel")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<double>("ValorProcedimento")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("TB_PROCEDIMENTOS", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descriçao = "Massagem local que pode ser realizada em diversas partes do corpo.",
                            Nome = "Drenagem Linfática",
                            ProfissionalResponsavel = "Sonia",
                            ValorProcedimento = 149.99000000000001
                        },
                        new
                        {
                            Id = 2,
                            Descriçao = "Limpeza facial com utilização de produtos, retira impurezas da pele.",
                            Nome = "Limpeza de Pele",
                            ProfissionalResponsavel = "Solange",
                            ValorProcedimento = 119.98999999999999
                        },
                        new
                        {
                            Id = 3,
                            Descriçao = "Aparelho que utiliza da rádiofrequência para reduzir flacidez corporal.",
                            Nome = "Rádio Frequência",
                            ProfissionalResponsavel = "Sonia",
                            ValorProcedimento = 99.989999999999995
                        },
                        new
                        {
                            Id = 4,
                            Descriçao = "Aparelho de ultrassom utilizado para reduzir gordura localizada.",
                            Nome = "Cavitação",
                            ProfissionalResponsavel = "Solange",
                            ValorProcedimento = 89.989999999999995
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
